{"version":3,"file":"static/webpack/static\\development\\pages\\sell.js.aea7fb1f0f30f6f3de82.hot-update.js","sources":["webpack:///./components/CreateItem.js","webpack:///./components/ErrorMessage.js"],"sourcesContent":["import React, { Component } from 'react';\nimport {Mutation} from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Form from './styles/Form';\nimport formatMoney from '../lib/formatMoney';\nimport Error from '../components/ErrorMessage';\n\nconst CREATE_ITEM_MUTATION = gql`\n    mutation CREATE_ITEM_MUTATION(\n        $title: String!\n        $description: String!\n        $image: String\n        $largeImage: String\n        $price: Int!\n    ) {\n        CreateItem(\n            title: $title\n            description: $description\n            image: $image\n            largeImage: $largeImage\n            price: $price\n        ) {\n            id\n        }\n    }\n`;\n\nclass CreateItem extends Component {\n    state = {\n        title: 'd',\n        description: 'e',\n        image: 'ewq',\n        largeImage: 'ewqeqweqw',\n        price: 3333\n    }\n    handleChange = (e) => {\n        const {name, type, value} = e.target;\n        console.log(name, type, value);\n        const val = type === 'number' ? parseFloat(value):value;\n        console.log(val);\n        this.setState({ [name]: val});\n    }\n\n    render() {\n        return (\n            <Mutation mutation={CREATE_ITEM_MUTATION}\n            variables={this.state} >\n                {(createItem, { loading, error }) => (\n                    <Form onSubmit={(e) => {\n                        e.preventDefault();\n                    }}>\n                        <fieldset>\n                            <label htmlFor=\"title\">\n                                Title\n                                <input type=\"text\" id=\"title\" name=\"title\" placeholder=\"Title\" \n                                value={this.state.title}\n                                onChange={this.handleChange}\n                                required />\n                            </label>\n                            <label htmlFor=\"price\">\n                                Price\n                                <input type=\"number\" id=\"price\" name=\"price\" placeholder=\"Price\" \n                                value={this.state.price}\n                                onChange={this.handleChange}\n                                required />\n                            </label>\n                            <label htmlFor=\"description\">\n                                Description\n                                <textarea type=\"text\" id=\"description\" name=\"description\" placeholder=\"Description\" \n                                value={this.state.description}\n                                onChange={this.handleChange}\n                                required />\n                            </label>\n                            <button type=\"submit\">Submit</button>\n                        </fieldset>\n                    </Form>\n                )}\n            </Mutation>\n            \n        );\n    }\n}\n\nexport default CreateItem;\nexport {CREATE_ITEM_MUTATION};\n","import styled from 'styled-components';\nimport React from 'react';\n\nimport PropTypes from 'prop-types';\n\nconst ErrorStyles = styled.div`\n  padding: 2rem;\n  background: white;\n  margin: 2rem 0;\n  border: 1px solid rgba(0, 0, 0, 0.05);\n  border-left: 5px solid red;\n  p {\n    margin: 0;\n    font-weight: 100;\n  }\n  strong {\n    margin-right: 1rem;\n  }\n`;\n\nconst DisplayError = ({ error }) => {\n  if (!error || !error.message) return null;\n  if (error.networkError && error.networkError.result && error.networkError.result.errors.length) {\n    return error.networkError.result.errors.map((error, i) => (\n      <ErrorStyles key={i}>\n        <p data-test=\"graphql-error\">\n          <strong>Shoot!</strong>\n          {error.message.replace('GraphQL error: ', '')}\n        </p>\n      </ErrorStyles>\n    ));\n  }\n  return (\n    <ErrorStyles>\n      <p data-test=\"graphql-error\">\n        <strong>Shoot!</strong>\n        {error.message.replace('GraphQL error: ', '')}\n      </p>\n    </ErrorStyles>\n  );\n};\n\nDisplayError.defaultProps = {\n  error: {},\n};\n\nDisplayError.propTypes = {\n  error: PropTypes.object,\n};\n\nexport default DisplayError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAmBA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;;;;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA1BA;AAiCA;;;;AArDA;AACA;AAuDA;;;;;;;;;;;;;;;;;;;;ACnFA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AAcA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAQA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AADA;AAIA;AACA;AADA;AAIA;;;;A","sourceRoot":""}