{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.0c83a3589eb14312dd06.hot-update.js","sources":["webpack:///./components/DeleteItem.js"],"sourcesContent":["import React, { Component } from 'react';\nimport {Mutation} from 'react-apollo';\nimport gql from 'graphql-tag';\nimport {ALL_ITEMS_QUERY} from './Items';\n\nconst DELETE_ITEM_MUTATION = gql`\n    mutation DELETE_ITEM_MUTATION($id: ID!){\n        deleteItem(id: $id) {\n            id\n        }\n    }\n`;\n\nclass DeleteItem extends Component {\n    update = (cache, payload) => {\n        // manually update the cache on the client so it matches the server\n\n        // read the cache for the items we want\n        const data = cache.readQuery({query: ALL_ITEMS_QUERY});\n        // filter the deleted item out of the page\n        data.items = data.items.filter(item => item.id !== payload.data.deleteItem.id);\n        // put the items back\n        cache.writeQuery({query: ALL_ITEMS_QUERY, data});\n    }\n    render() {\n        return (\n            <Mutation \n            mutation={DELETE_ITEM_MUTATION} \n            variables={{id: this.props.id}}\n            update={this.update}\n            >\n                {(deleteItem, {error}) => (\n                    <button onClick={()=>{\n                        if(confirm(\"Are you sure you want to delete this item?\")){\n                            deleteItem();\n                        }\n                    }}>{this.props.children}</button>\n                )}\n            </Mutation>\n        );\n    }\n}\n\nexport default DeleteItem;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AAOA;;;;;;;;;;;;;;;;;;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AASA;;;;AA3BA;AACA;AA6BA;;;;A","sourceRoot":""}