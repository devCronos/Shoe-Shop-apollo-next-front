{"version":3,"file":"static/webpack/static\\development\\pages\\permissions.js.6c7ebd7838ee8d5cddff.hot-update.js","sources":["webpack:///./components/Permissions.js"],"sourcesContent":["import React from \"react\";\nimport { Query } from 'react-apollo';\nimport Error from './ErrorMessage';\nimport gql from 'graphql-tag';\nimport Table from './styles/Table';\nimport SickButton from './styles/SickButton';\nimport PropTypes from 'prop-types';\n\nconst possiblePermissions = [\n    'ADMIN',\n    'USER',\n    'ITEMCREATE',\n    'ITEMUPDATE',\n    'ITEMDELETE',\n    'PERMISSIONUPDATE'\n]\n\nconst ALL_USERS_QUERY = gql`\n    query {\n        users {\n            id\n            name\n            email\n            permissions\n        }\n    }\n`;\n\nconst Permissions = (props) => {\n    return (\n        <Query query={ALL_USERS_QUERY}>\n            {({data,loading,error}) => (\n                <div>\n                    <Error error={error} />\n                    <div>\n                        <h2>Manage Permissions</h2>\n                        <Table>\n                            <thead>\n                                <tr>\n                                    <th>Name</th>\n                                    <th>Email</th>\n                                    {possiblePermissions.map(permission=><th key={permission}>{permission}</th>)}\n                                    <th>Confirm</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {data.users.map(user => <UserPermissions key={user.id} user={user} /> )}\n                            </tbody>\n                        </Table>\n                    </div>\n                </div>\n            )}\n        </Query>\n    );\n};\n\nclass UserPermissions extends React.Component {\n    static propTypes={\n        user: PropTypes.shape({\n            name: PropTypes.string,\n            email: PropTypes.string,\n            id: PropTypes.string,\n            permissions: PropTypes.array\n        }).isRequired\n    }\n\n    // fine because we are seeding the initial state\n    state = {\n        permissions: this.props.user.permissions\n    }\n\n    handlePermissionChange = e => {\n        const checkbox = e.target;\n        let updatedPermissions = [...this.state.permissions];\n        if(checkbox.checked) {\n            updatedPermissions.push(checkbox.value);\n        } else {\n            updatedPermissions = updatedPermissions.filter(permission => permission !== checkbox.value);\n        }\n        this.setState({permission: updatedPermissions})\n    }\n\n    render(){\n        const user = this.props.user;\n        return (\n            <tr>\n                <td>{user.name}</td>\n                <td>{user.email}</td>\n                {possiblePermissions.map(permission => (\n                    <td key={permission}>\n                        <label htmlFor={`${user.id}-permission-${permission}`}>\n                            <input type=\"checkbox\" \n                            onChange={this.handlePermissionChange}\n                            value={permission}\n                            checked={this.state.permissions.includes(permission)}></input>\n                        </label>\n                    </td>\n                ))}\n                <td>\n                    <SickButton>Update</SickButton>\n                </td>\n            </tr>\n        )\n    }\n}\n\nexport default Permissions;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AASA;AACA;AAUA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAfA;AAuBA;AACA;AACA;;;;;;;;;;;;;;;;;;AAWA;AACA;AADA;AACA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AA/CA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAFA;AACA;AAgDA;;;;A","sourceRoot":""}